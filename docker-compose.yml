version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: musicbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: musicbot
      POSTGRES_USER: musicbot
      POSTGRES_PASSWORD: musicbot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U musicbot -d musicbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: musicbot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Discord Music Bot
  discord-music-bot:
    build: .
    container_name: discord-music-bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql+asyncpg://musicbot:musicbot_password@postgres:5432/musicbot
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "print('Bot OK')"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data: